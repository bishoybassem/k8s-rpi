- delegate_to: localhost
  run_once: true
  become: false
  block:
    - name: Create download directory
      file:
        state: directory
        dest: "{{ role_path }}/files/downloads"

    - name: Build etcd binaries for armv7l in a golang docker container
      shell: |
        TEMP_DIR=$(mktemp -d)
        docker run --interactive -v ${TEMP_DIR}:/etcdbin golang:{{ golang_version }} /bin/bash -c \
          "git clone https://github.com/coreos/etcd /go/src/go.etcd.io/etcd \
          && cd /go/src/go.etcd.io/etcd \
          && git checkout {{ etcd_version }} \
          && GOARM=7 GOARCH=arm ./build \
          && cp -f bin/etcd* /etcdbin"
        cp $TEMP_DIR/etcd etcd-{{ etcd_version }}
        cp $TEMP_DIR/etcdctl etcdctl-{{ etcd_version }}
      args:
        chdir: "{{ role_path }}/files/downloads"
        creates: etcd-{{ etcd_version }}

- name: Copy etcdctl binary
  copy:
    src: downloads/etcdctl-{{ etcd_version }}
    dest: /usr/bin/etcdctl
    mode: 0755

- name: Define initial etcd cluster members list
  set_fact:
    etcd_members: ['master']

- name: Construct etcd cluster members list
  set_fact:
    etcd_members: "{{ etcd_members + [item] }}"
  when: "'etcd_cluster' in hostvars[item] and hostvars[item]['etcd_cluster']"
  with_items: "{{ groups['worker_nodes'] }}"

- when: inventory_hostname in etcd_members
  vars:
    etcd_cluster_urls: |-
      {% for host in etcd_members %}
      {{ hostvars[host].ansible_hostname }}=http://{{ hostvars[host].ansible_default_ipv4.address }}:2380{{ ',' if not loop.last else ''}}
      {%- endfor %}
  block:
    - name: Copy etcd binary
      copy:
        src: downloads/etcd-{{ etcd_version }}
        dest: /usr/bin/etcd
        mode: 0755

    - name: Add systemd service
      template:
        src: etcd.service.j2
        dest: /etc/systemd/system/etcd.service
        mode: 0644

    - name: Enable systemd service
      service:
        name: etcd
        enabled: yes

    - name: Reload systemd units
      systemd:
        daemon_reload: yes